@inject SignInManager<IdentityUser> signInManager;
@model QuizDetailsViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>@Model.Quiz.QuizName Quiz</h1>

<div>
    <table class="table">

        @foreach (var question in Model.Questions)
        {
            <tr>
                <td>

                    @Html.DisplayFor(modelItem => question.QuestionName)

                </td>
                @if (signInManager.IsSignedIn(User))
                {
                    <td>
                        <a class="btn btn-primary" asp-controller="Questions" asp-action="Details" asp-route-id="@question.Id">View Answers</a>
                        <a class="btn btn-secondary" asp-controller="Questions" asp-action="Edit" asp-route-id="@question.Id">Edit</a>
                        <a class="btn btn-danger" asp-controller="Questions" asp-action="Delete" asp-route-id="@question.Id">Delete</a>
                    </td>
                }
            </tr>
        }
    </table>
</div>

@if (signInManager.IsSignedIn(User) && User.IsInRole("Admin"))
{
    <div>
        <a class="btn btn-outline-primary" asp-controller="Questions" asp-action="Create">Add Question</a>
    </div>
}

<br />

<div>
    <a asp-action="Index">Back to Quiz List</a>
</div>
